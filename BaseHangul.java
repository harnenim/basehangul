package baseHangul;

import java.io.*;

public class BaseHangul {

	static final char[] ksc5601 = "가각간갇갈갉갊감갑값갓갔강갖갗같갚갛개객갠갤갬갭갯갰갱갸갹갼걀걋걍걔걘걜거걱건걷걸걺검겁것겄겅겆겉겊겋게겐겔겜겝겟겠겡겨격겪견겯결겸겹겻겼경곁계곈곌곕곗고곡곤곧골곪곬곯곰곱곳공곶과곽관괄괆괌괍괏광괘괜괠괩괬괭괴괵괸괼굄굅굇굉교굔굘굡굣구국군굳굴굵굶굻굼굽굿궁궂궈궉권궐궜궝궤궷귀귁귄귈귐귑귓규균귤그극근귿글긁금급긋긍긔기긱긴긷길긺김깁깃깅깆깊까깍깎깐깔깖깜깝깟깠깡깥깨깩깬깰깸깹깻깼깽꺄꺅꺌꺼꺽꺾껀껄껌껍껏껐껑께껙껜껨껫껭껴껸껼꼇꼈꼍꼐꼬꼭꼰꼲꼴꼼꼽꼿꽁꽂꽃꽈꽉꽐꽜꽝꽤꽥꽹꾀꾄꾈꾐꾑꾕꾜꾸꾹꾼꿀꿇꿈꿉꿋꿍꿎꿔꿜꿨꿩꿰꿱꿴꿸뀀뀁뀄뀌뀐뀔뀜뀝뀨끄끅끈끊끌끎끓끔끕끗끙끝끼끽낀낄낌낍낏낑나낙낚난낟날낡낢남납낫났낭낮낯낱낳내낵낸낼냄냅냇냈냉냐냑냔냘냠냥너넉넋넌널넒넓넘넙넛넜넝넣네넥넨넬넴넵넷넸넹녀녁년녈념녑녔녕녘녜녠노녹논놀놂놈놉놋농높놓놔놘놜놨뇌뇐뇔뇜뇝뇟뇨뇩뇬뇰뇹뇻뇽누눅눈눋눌눔눕눗눙눠눴눼뉘뉜뉠뉨뉩뉴뉵뉼늄늅늉느늑는늘늙늚늠늡늣능늦늪늬늰늴니닉닌닐닒님닙닛닝닢다닥닦단닫달닭닮닯닳담답닷닸당닺닻닿대댁댄댈댐댑댓댔댕댜더덕덖던덛덜덞덟덤덥덧덩덫덮데덱덴델뎀뎁뎃뎄뎅뎌뎐뎔뎠뎡뎨뎬도독돈돋돌돎돐돔돕돗동돛돝돠돤돨돼됐되된될됨됩됫됴두둑둔둘둠둡둣둥둬뒀뒈뒝뒤뒨뒬뒵뒷뒹듀듄듈듐듕드득든듣들듦듬듭듯등듸디딕딘딛딜딤딥딧딨딩딪따딱딴딸땀땁땃땄땅땋때땍땐땔땜땝땟땠땡떠떡떤떨떪떫떰떱떳떴떵떻떼떽뗀뗄뗌뗍뗏뗐뗑뗘뗬또똑똔똘똥똬똴뙈뙤뙨뚜뚝뚠뚤뚫뚬뚱뛔뛰뛴뛸뜀뜁뜅뜨뜩뜬뜯뜰뜸뜹뜻띄띈띌띔띕띠띤띨띰띱띳띵라락란랄람랍랏랐랑랒랖랗래랙랜랠램랩랫랬랭랴략랸럇량러럭런럴럼럽럿렀렁렇레렉렌렐렘렙렛렝려력련렬렴렵렷렸령례롄롑롓로록론롤롬롭롯롱롸롼뢍뢨뢰뢴뢸룀룁룃룅료룐룔룝룟룡루룩룬룰룸룹룻룽뤄뤘뤠뤼뤽륀륄륌륏륑류륙륜률륨륩륫륭르륵른를름릅릇릉릊릍릎리릭린릴림립릿링마막만많맏말맑맒맘맙맛망맞맡맣매맥맨맬맴맵맷맸맹맺먀먁먈먕머먹먼멀멂멈멉멋멍멎멓메멕멘멜멤멥멧멨멩며멱면멸몃몄명몇몌모목몫몬몰몲몸몹못몽뫄뫈뫘뫙뫼묀묄묍묏묑묘묜묠묩묫무묵묶문묻물묽묾뭄뭅뭇뭉뭍뭏뭐뭔뭘뭡뭣뭬뮈뮌뮐뮤뮨뮬뮴뮷므믄믈믐믓미믹민믿밀밂밈밉밋밌밍및밑바박밖밗반받발밝밞밟밤밥밧방밭배백밴밸뱀뱁뱃뱄뱅뱉뱌뱍뱐뱝버벅번벋벌벎범법벗벙벚베벡벤벧벨벰벱벳벴벵벼벽변별볍볏볐병볕볘볜보복볶본볼봄봅봇봉봐봔봤봬뵀뵈뵉뵌뵐뵘뵙뵤뵨부북분붇불붉붊붐붑붓붕붙붚붜붤붰붸뷔뷕뷘뷜뷩뷰뷴뷸븀븃븅브븍븐블븜븝븟비빅빈빌빎빔빕빗흐".toCharArray();
	static int[] reverseCode = {0, 1, 2350, 2350, 2, 2350, 2350, 3, 4, 5, 6, 2350, 2350, 2350, 2350, 2350, 7, 8, 9, 10, 11, 12, 13, 14, 2350, 15, 16, 17, 18, 19, 2350, 2350, 20, 2350, 2350, 2350, 21, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 22, 23, 2350, 24, 25, 26, 2350, 2350, 2350, 2350, 2350, 2350, 27, 28, 2350, 2350, 29, 2350, 2350, 2350, 30, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 31, 2350, 32, 2350, 2350, 2350, 2350, 2350, 2350, 33, 2350, 2350, 2350, 34, 2350, 2350, 2350, 35, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 36, 37, 2350, 2350, 38, 2350, 2350, 39, 40, 2350, 41, 2350, 2350, 2350, 2350, 2350, 42, 43, 2350, 44, 45, 46, 47, 2350, 2350, 48, 49, 50, 51, 2350, 2350, 2350, 52, 2350, 2350, 2350, 53, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 54, 55, 2350, 56, 57, 58, 2350, 2350, 2350, 2350, 2350, 2350, 59, 60, 61, 2350, 62, 2350, 2350, 63, 64, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 65, 66, 2350, 67, 68, 69, 2350, 2350, 2350, 70, 2350, 2350, 71, 2350, 2350, 2350, 72, 2350, 2350, 2350, 73, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 74, 2350, 75, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 76, 77, 2350, 2350, 78, 2350, 2350, 79, 80, 2350, 81, 2350, 82, 2350, 2350, 83, 84, 85, 2350, 86, 2350, 87, 88, 2350, 2350, 2350, 2350, 2350, 89, 90, 2350, 2350, 91, 2350, 2350, 2350, 92, 2350, 93, 2350, 2350, 2350, 2350, 2350, 94, 95, 2350, 96, 2350, 97, 2350, 2350, 2350, 2350, 2350, 2350, 98, 2350, 2350, 2350, 99, 2350, 2350, 2350, 100, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 101, 2350, 2350, 102, 103, 2350, 2350, 2350, 2350, 2350, 2350, 104, 105, 2350, 2350, 106, 2350, 2350, 2350, 107, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 108, 109, 2350, 110, 2350, 111, 2350, 2350, 2350, 2350, 2350, 2350, 112, 2350, 2350, 2350, 113, 2350, 2350, 2350, 114, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 115, 2350, 116, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 117, 118, 2350, 2350, 119, 2350, 2350, 120, 121, 122, 123, 2350, 2350, 2350, 2350, 124, 125, 126, 2350, 127, 2350, 128, 129, 2350, 2350, 2350, 2350, 2350, 130, 131, 2350, 2350, 132, 2350, 2350, 2350, 133, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 134, 135, 2350, 2350, 2350, 2350, 2350, 2350, 136, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 137, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 138, 139, 2350, 2350, 140, 2350, 2350, 2350, 141, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 142, 143, 2350, 144, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 145, 2350, 2350, 2350, 146, 2350, 2350, 2350, 147, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 148, 149, 2350, 2350, 150, 2350, 2350, 151, 152, 153, 2350, 2350, 2350, 2350, 2350, 2350, 154, 155, 2350, 156, 2350, 157, 2350, 2350, 2350, 2350, 2350, 2350, 158, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 159, 160, 2350, 2350, 161, 2350, 2350, 162, 163, 2350, 164, 2350, 2350, 2350, 2350, 2350, 165, 166, 2350, 167, 2350, 168, 169, 2350, 2350, 2350, 170, 2350, 171, 172, 173, 2350, 174, 2350, 2350, 2350, 175, 2350, 176, 2350, 2350, 2350, 2350, 2350, 177, 178, 2350, 179, 180, 181, 2350, 2350, 2350, 182, 2350, 2350, 183, 184, 2350, 2350, 185, 2350, 2350, 2350, 186, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 187, 188, 2350, 189, 190, 191, 2350, 2350, 2350, 2350, 2350, 2350, 192, 193, 2350, 2350, 2350, 2350, 2350, 2350, 194, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 195, 196, 197, 2350, 198, 2350, 2350, 2350, 199, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 200, 201, 2350, 202, 203, 204, 2350, 2350, 2350, 2350, 2350, 2350, 205, 206, 2350, 2350, 207, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 208, 2350, 2350, 209, 2350, 210, 2350, 2350, 2350, 2350, 2350, 2350, 211, 2350, 2350, 2350, 212, 2350, 2350, 2350, 213, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 214, 215, 2350, 2350, 2350, 2350, 216, 2350, 2350, 217, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 218, 219, 2350, 2350, 220, 2350, 221, 2350, 222, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 223, 224, 2350, 225, 2350, 226, 227, 228, 2350, 2350, 2350, 2350, 229, 230, 2350, 2350, 2350, 2350, 2350, 2350, 231, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 232, 233, 2350, 2350, 2350, 2350, 2350, 2350, 234, 235, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 236, 2350, 2350, 2350, 2350, 2350, 2350, 237, 2350, 2350, 2350, 238, 2350, 2350, 2350, 239, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 240, 241, 2350, 2350, 2350, 242, 2350, 2350, 2350, 2350, 2350, 2350, 243, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 244, 245, 2350, 2350, 246, 2350, 2350, 2350, 247, 2350, 2350, 2350, 2350, 2350, 2350, 248, 249, 250, 2350, 251, 2350, 252, 253, 2350, 2350, 2350, 2350, 2350, 254, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 255, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 256, 257, 2350, 2350, 2350, 2350, 2350, 2350, 258, 259, 2350, 2350, 260, 2350, 2350, 2350, 261, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 262, 263, 2350, 2350, 264, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 265, 2350, 2350, 2350, 266, 2350, 2350, 2350, 267, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 268, 269, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 270, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 271, 272, 2350, 2350, 273, 2350, 274, 2350, 275, 2350, 276, 2350, 2350, 2350, 2350, 277, 278, 279, 2350, 280, 2350, 281, 2350, 2350, 2350, 282, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 283, 284, 2350, 2350, 285, 2350, 2350, 2350, 286, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 287, 288, 2350, 289, 2350, 290, 2350, 2350, 2350, 2350, 2350, 2350, 291, 292, 293, 2350, 294, 2350, 2350, 295, 296, 297, 298, 2350, 2350, 2350, 2350, 2350, 299, 300, 2350, 301, 302, 303, 304, 305, 2350, 306, 2350, 307, 308, 309, 2350, 2350, 310, 2350, 2350, 2350, 311, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 312, 313, 2350, 314, 315, 316, 2350, 2350, 2350, 2350, 2350, 2350, 317, 318, 2350, 2350, 319, 2350, 2350, 2350, 320, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 321, 2350, 2350, 2350, 2350, 322, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 323, 324, 2350, 325, 326, 2350, 2350, 2350, 327, 2350, 328, 329, 2350, 2350, 2350, 2350, 330, 331, 2350, 332, 333, 334, 2350, 2350, 2350, 2350, 2350, 335, 336, 337, 2350, 2350, 338, 2350, 2350, 2350, 339, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 340, 341, 2350, 342, 343, 344, 2350, 2350, 2350, 2350, 2350, 2350, 345, 346, 2350, 2350, 347, 2350, 2350, 2350, 348, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 349, 350, 2350, 2350, 351, 352, 2350, 2350, 353, 2350, 2350, 2350, 354, 2350, 2350, 2350, 355, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 356, 357, 2350, 2350, 358, 2350, 2350, 2350, 359, 2350, 360, 2350, 2350, 2350, 2350, 2350, 361, 362, 2350, 363, 2350, 364, 2350, 2350, 2350, 2350, 365, 366, 367, 2350, 2350, 2350, 368, 2350, 2350, 2350, 369, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 370, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 371, 2350, 2350, 2350, 372, 2350, 2350, 2350, 373, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 374, 375, 2350, 376, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 377, 378, 2350, 2350, 379, 2350, 2350, 2350, 380, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 381, 2350, 382, 2350, 383, 2350, 2350, 2350, 2350, 2350, 2350, 384, 385, 2350, 2350, 386, 2350, 2350, 387, 388, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 389, 390, 2350, 391, 2350, 392, 2350, 2350, 2350, 2350, 2350, 2350, 393, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 394, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 395, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 396, 2350, 2350, 2350, 397, 2350, 2350, 2350, 398, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 399, 400, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 401, 402, 2350, 2350, 2350, 2350, 2350, 2350, 403, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 404, 405, 2350, 2350, 2350, 406, 2350, 2350, 2350, 2350, 2350, 2350, 407, 408, 2350, 2350, 409, 2350, 2350, 2350, 410, 411, 412, 2350, 2350, 2350, 2350, 2350, 413, 414, 2350, 415, 2350, 416, 417, 2350, 2350, 2350, 418, 2350, 419, 2350, 2350, 2350, 420, 2350, 2350, 2350, 421, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 422, 423, 2350, 2350, 424, 2350, 2350, 2350, 425, 2350, 426, 2350, 2350, 2350, 2350, 2350, 427, 428, 2350, 429, 2350, 430, 2350, 2350, 2350, 2350, 431, 2350, 432, 433, 434, 2350, 435, 2350, 2350, 436, 437, 438, 439, 440, 2350, 2350, 2350, 441, 442, 443, 2350, 444, 445, 446, 447, 448, 2350, 2350, 2350, 449, 450, 451, 2350, 2350, 452, 2350, 2350, 2350, 453, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 454, 455, 2350, 456, 457, 458, 2350, 2350, 2350, 2350, 2350, 2350, 459, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 460, 461, 462, 2350, 463, 2350, 2350, 464, 465, 2350, 466, 467, 2350, 2350, 2350, 2350, 468, 469, 2350, 470, 2350, 471, 2350, 472, 2350, 2350, 473, 2350, 474, 475, 2350, 2350, 476, 2350, 2350, 2350, 477, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 478, 479, 2350, 480, 481, 482, 2350, 2350, 2350, 2350, 2350, 2350, 483, 2350, 2350, 2350, 484, 2350, 2350, 2350, 485, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 486, 487, 2350, 2350, 2350, 2350, 2350, 2350, 488, 2350, 2350, 2350, 489, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 490, 491, 2350, 2350, 492, 2350, 2350, 493, 494, 2350, 495, 2350, 496, 2350, 2350, 2350, 497, 498, 2350, 499, 2350, 500, 2350, 501, 2350, 502, 2350, 2350, 503, 2350, 2350, 2350, 504, 2350, 2350, 2350, 505, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 506, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 507, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 508, 2350, 2350, 2350, 509, 2350, 2350, 2350, 510, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 511, 512, 2350, 513, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 514, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 515, 516, 2350, 2350, 517, 2350, 2350, 2350, 518, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 519, 520, 2350, 521, 2350, 522, 2350, 2350, 2350, 2350, 2350, 2350, 523, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 524, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 525, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 526, 2350, 2350, 2350, 2350, 2350, 2350, 527, 2350, 2350, 2350, 528, 2350, 2350, 2350, 529, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 530, 2350, 531, 2350, 532, 2350, 2350, 2350, 2350, 2350, 2350, 533, 2350, 2350, 2350, 534, 2350, 2350, 2350, 535, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 536, 2350, 2350, 2350, 2350, 537, 2350, 2350, 2350, 2350, 2350, 2350, 538, 539, 2350, 2350, 540, 2350, 2350, 541, 542, 2350, 543, 2350, 2350, 2350, 2350, 2350, 544, 545, 2350, 546, 2350, 547, 2350, 2350, 2350, 2350, 2350, 2350, 548, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 549, 550, 2350, 2350, 551, 2350, 2350, 552, 553, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 554, 555, 2350, 556, 557, 558, 559, 2350, 2350, 2350, 2350, 2350, 560, 561, 2350, 2350, 562, 2350, 2350, 2350, 563, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 564, 565, 2350, 566, 567, 568, 2350, 2350, 2350, 2350, 2350, 569, 570, 571, 2350, 2350, 572, 2350, 2350, 2350, 573, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 574, 575, 2350, 576, 577, 578, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 579, 580, 2350, 2350, 581, 2350, 2350, 2350, 582, 2350, 583, 584, 2350, 2350, 2350, 2350, 585, 586, 2350, 587, 588, 589, 2350, 2350, 2350, 2350, 2350, 590, 591, 592, 2350, 2350, 593, 2350, 2350, 2350, 594, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 595, 596, 2350, 597, 598, 599, 2350, 2350, 2350, 2350, 2350, 2350, 600, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 601, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 602, 603, 2350, 2350, 604, 2350, 2350, 2350, 605, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 606, 2350, 2350, 2350, 2350, 2350, 2350, 607, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 608, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 609, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 610, 2350, 2350, 2350, 611, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 612, 613, 2350, 2350, 614, 2350, 2350, 2350, 615, 2350, 2350, 2350, 2350, 2350, 2350, 616, 617, 2350, 2350, 2350, 2350, 618, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 619, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 620, 2350, 2350, 2350, 621, 2350, 2350, 2350, 622, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 623, 624, 2350, 2350, 2350, 625, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 626, 627, 2350, 2350, 628, 2350, 2350, 629, 630, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 631, 632, 2350, 633, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 634, 2350, 2350, 2350, 635, 2350, 2350, 2350, 636, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 637, 638, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 639, 2350, 2350, 2350, 640, 2350, 2350, 2350, 641, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 642, 643, 2350, 644, 2350, 645, 2350, 2350, 2350, 2350, 2350, 2350, 646, 647, 2350, 2350, 648, 2350, 2350, 2350, 649, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 650, 651, 2350, 652, 653, 654, 655, 2350, 2350, 2350, 656, 657, 658, 659, 2350, 2350, 660, 2350, 2350, 2350, 661, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 662, 663, 2350, 664, 665, 666, 2350, 2350, 2350, 2350, 2350, 2350, 667, 668, 2350, 2350, 669, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 670, 2350, 671, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 672, 673, 2350, 2350, 674, 2350, 2350, 2350, 675, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 676, 677, 2350, 678, 679, 680, 2350, 2350, 2350, 2350, 2350, 681, 682, 683, 2350, 2350, 684, 2350, 2350, 2350, 685, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 686, 687, 2350, 688, 2350, 689, 2350, 2350, 2350, 2350, 2350, 2350, 690, 691, 2350, 2350, 692, 2350, 2350, 2350, 693, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 694, 695, 2350, 696, 697, 698, 2350, 2350, 2350, 2350, 2350, 2350, 699, 2350, 2350, 2350, 700, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 701, 2350, 702, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 703, 704, 2350, 2350, 705, 2350, 2350, 2350, 706, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 707, 708, 2350, 709, 2350, 710, 2350, 2350, 2350, 2350, 2350, 2350, 711, 2350, 2350, 2350, 712, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 713, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 714, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 715, 2350, 2350, 2350, 716, 2350, 2350, 2350, 717, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 718, 719, 2350, 720, 2350, 721, 2350, 2350, 2350, 2350, 2350, 2350, 722, 2350, 2350, 2350, 723, 2350, 2350, 2350, 724, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 725, 2350, 726, 2350, 727, 2350, 2350, 2350, 2350, 2350, 2350, 728, 729, 2350, 2350, 730, 2350, 2350, 2350, 731, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 732, 733, 2350, 734, 2350, 735, 2350, 2350, 2350, 2350, 2350, 2350, 736, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 737, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 738, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 739, 740, 2350, 2350, 741, 2350, 2350, 2350, 742, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 743, 2350, 2350, 744, 2350, 745, 2350, 2350, 2350, 2350, 2350, 2350, 746, 747, 2350, 2350, 748, 2350, 2350, 2350, 749, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 750, 751, 2350, 752, 2350, 753, 2350, 2350, 2350, 2350, 2350, 2350, 754, 755, 2350, 2350, 756, 2350, 2350, 2350, 757, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 758, 759, 2350, 760, 2350, 761, 762, 2350, 2350, 763, 764, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 765, 766, 2350, 2350, 767, 2350, 2350, 2350, 768, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 769, 770, 2350, 771, 2350, 772, 2350, 2350, 2350, 2350, 2350, 2350, 773, 774, 2350, 2350, 775, 2350, 776, 777, 778, 779, 780, 2350, 2350, 2350, 2350, 2350, 781, 782, 2350, 783, 2350, 784, 785, 2350, 2350, 786, 2350, 787, 788, 789, 2350, 2350, 790, 2350, 2350, 2350, 791, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 792, 793, 2350, 794, 795, 796, 797, 2350, 2350, 2350, 2350, 2350, 798, 799, 2350, 2350, 2350, 2350, 2350, 2350, 800, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 801, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 802, 803, 2350, 2350, 804, 2350, 2350, 2350, 805, 2350, 806, 2350, 2350, 2350, 2350, 2350, 807, 808, 2350, 809, 2350, 810, 811, 2350, 2350, 2350, 2350, 812, 813, 814, 2350, 2350, 815, 2350, 2350, 2350, 816, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 817, 818, 2350, 819, 820, 821, 2350, 2350, 2350, 2350, 2350, 2350, 822, 823, 2350, 2350, 824, 2350, 2350, 2350, 825, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 826, 827, 828, 2350, 829, 2350, 2350, 2350, 2350, 830, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 831, 832, 2350, 833, 834, 2350, 2350, 2350, 835, 2350, 836, 2350, 2350, 2350, 2350, 2350, 837, 838, 2350, 839, 2350, 840, 2350, 2350, 2350, 2350, 2350, 2350, 841, 2350, 2350, 2350, 842, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 843, 844, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 845, 2350, 2350, 2350, 846, 2350, 2350, 2350, 847, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 848, 2350, 849, 2350, 850, 2350, 2350, 2350, 2350, 2350, 2350, 851, 2350, 2350, 2350, 852, 2350, 2350, 2350, 853, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 854, 2350, 855, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 856, 857, 858, 2350, 859, 2350, 2350, 860, 861, 862, 863, 2350, 2350, 2350, 2350, 2350, 864, 865, 2350, 866, 2350, 867, 2350, 2350, 2350, 868, 2350, 869, 870, 2350, 2350, 2350, 871, 2350, 2350, 2350, 872, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 873, 2350, 874, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 875, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 876, 2350, 2350, 2350, 877, 2350, 2350, 2350, 878, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 879, 2350, 2350, 2350, 880, 2350, 2350, 2350, 881, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 882, 2350, 2350, 883, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 884, 2350, 2350, 2350, 885, 2350, 2350, 2350, 886, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 887, 2350, 2350, 888, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 889, 890, 2350, 2350, 891, 2350, 2350, 892, 893, 2350, 894, 2350, 2350, 2350, 2350, 2350, 895, 896, 2350, 897, 898, 899, 2350, 900, 2350, 901, 2350, 2350, 902, 903, 904, 905, 906, 2350, 2350, 907, 908, 909, 910, 911, 2350, 2350, 2350, 2350, 912, 913, 2350, 914, 2350, 915, 2350, 2350, 2350, 916, 2350, 2350, 917, 918, 2350, 2350, 919, 2350, 2350, 2350, 920, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 921, 922, 2350, 923, 924, 925, 2350, 2350, 2350, 926, 2350, 2350, 927, 928, 2350, 2350, 929, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 930, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 931, 932, 2350, 2350, 933, 2350, 2350, 934, 935, 2350, 936, 2350, 2350, 2350, 2350, 2350, 937, 938, 2350, 939, 2350, 940, 941, 2350, 2350, 2350, 2350, 2350, 942, 943, 2350, 2350, 944, 2350, 2350, 945, 946, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 947, 948, 2350, 949, 950, 951, 2350, 2350, 2350, 2350, 2350, 2350, 952, 953, 2350, 2350, 954, 2350, 2350, 2350, 955, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 956, 2350, 957, 958, 959, 2350, 2350, 2350, 960, 2350, 2350, 961, 2350, 2350, 2350, 962, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 963, 964, 965, 2350, 966, 2350, 2350, 2350, 967, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 968, 969, 2350, 970, 2350, 971, 2350, 2350, 2350, 2350, 2350, 2350, 972, 2350, 2350, 2350, 973, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 974, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 975, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 976, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 977, 978, 2350, 2350, 979, 2350, 2350, 2350, 980, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 981, 982, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 983, 2350, 2350, 2350, 984, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 985, 986, 2350, 2350, 987, 2350, 2350, 988, 989, 990, 991, 2350, 2350, 2350, 2350, 2350, 992, 993, 2350, 994, 2350, 995, 2350, 2350, 2350, 996, 997, 2350, 998, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 999, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 1000, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 1001, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 1002, 1003, 2350, 2350, 1004, 2350, 2350, 2350, 1005, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 1006, 2350, 2350, 2350, 2350, 2350, 2350, 1007, 2350, 2350, 2350, 1008, 2350, 2350, 2350, 1009, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 1010, 2350, 2350, 1011, 2350, 1012, 2350, 2350, 2350, 2350, 2350, 2350, 1013, 1014, 2350, 2350, 1015, 2350, 2350, 2350, 1016, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 1017, 1018, 2350, 1019, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 2350, 1020, 1021, 2350, 2350, 1022, 2350, 2350, 2350, 1023, 2350, 1024, 2350, 2350, 2350, 2350, 2350, 1025, 1026, 2350, 1027, 2350, 1028};;

	public static String encode(FileInputStream in, int start) throws Exception {
		in.skip(start);
		byte[] bytes = new byte[in.available()];
		in.read(bytes);
		return encode(bytes);
	}	
	public static String encode(byte[] bytes) {
		if(bytes.length==0)  return ""; // 데이터 없음

		char[] result = new char[(bytes.length+4)/5*4];
		int i=0, j=0, c;
		do {
			c	  = ((int)bytes[i]<<2) & 0b1111111100;
			if(++i == bytes.length) { result[j++]=ksc5601[c]; result[j++]='흐'; result[j++]='흐'; result[j++]='흐'; break; }
			c	 += ((int)bytes[i]>>6) & 0b0000000011;
			result[j++]=ksc5601[c];

			c	  = ((int)bytes[i]<<4) & 0b1111110000;
			if(++i == bytes.length) { result[j++]=ksc5601[c]; result[j++]='흐'; result[j++]='흐'; break; }
			c	 += ((int)bytes[i]>>4) & 0b0000001111;
			result[j++]=ksc5601[c];

			c	  = ((int)bytes[i]<<6) & 0b1111000000;
			if(++i == bytes.length) { result[j++]=ksc5601[c]; result[j++]='흐'; break; }
			c	 += ((int)bytes[i]>>2) & 0b0000111111;
			result[j++]=ksc5601[c];

			c	  = ((int)bytes[i]<<8) & 0b1100000000;
			if(++i == bytes.length)
				c = (c>>8) + 1024;
			else
				c+=  (int)bytes[i]     & 0b0011111111;
			result[j++]=ksc5601[c];

		} while(++i < bytes.length);
		
		return new String(result);
	}
	
	public static byte[] decode(String str) {
		if(str.length()==0)  return new byte[0]; // 데이터 없음
		if(str.length()%4>0) return new byte[0]; // 정상적인 데이터가 아님
		
		str = str.replace('흐', '빙');
		
		byte[] result = new byte[str.length()/4*5];
		char[] c = str.toCharArray();
		int i=0, j=0, b;
		do {
			if(c[i]<'가' || c[i]>'빙'|| (b = reverseCode[c[i++]-'가']) > 1027) break;
			result[j++] = (byte)(b>>2);
			
			result[j  ] = (byte)(b<<6);
			if(c[i]<'가' || c[i]>'빙'|| (b = reverseCode[c[i++]-'가']) > 1027) break;
			result[j++]+= (byte)(b>>4);
			
			result[j  ] = (byte)(b<<4);
			if(c[i]<'가' || c[i]>'빙'|| (b = reverseCode[c[i++]-'가']) > 1027) break;
			result[j++]+= (byte)(b>>6);

			result[j  ] = (byte)(b<<2);
			if(c[i]<'가' || c[i]>'빙'|| (b = reverseCode[c[i++]-'가']) > 1027) break;
			if(b < 1024) {
				result[j++]+= (byte)(b>>8);
			} else {
				result[j++]+= (byte)(b & 0b11);
				break;
			}
			
			result[j++] = (byte)b;

		} while(i < c.length);
		
		if(j < result.length) {
			byte[] temp = new byte[j];
			System.arraycopy(result, 0, temp, 0, j);
			result = temp;
		}
		
		return result;
	}
	
//-----------------------------------BOM 클래스-----------------------------------//
// 외부 클래스로 빼는 게 좋을 듯함
	static class BOM {
		static final byte[] UTF8	= { (byte)0xEF, (byte)0xBB, (byte)0xBF };
		static final byte[] UTF16LE	= { (byte)0xFF, (byte)0xFE };
		static final byte[] UTF16BE	= { (byte)0xFE, (byte)0xFF };

		public static int length(String filename) throws IOException {
			FileInputStream in = new FileInputStream(filename);
			byte[] BOM = new byte[3];
			in.read(BOM, 0, 3);
			in.close();

			if(BOM[0]==UTF8[0] && BOM[1]==UTF8[1] && BOM[2]==UTF8[2])
				return 3;
			if(BOM[0]==UTF16LE[0] && BOM[1]==UTF16LE[1])
				return 2;
			if(BOM[0]==UTF16BE[0] && BOM[1]==UTF16BE[1])
				return 2;

			return 0;
		}

		public static String encoding(String filename) throws IOException {
			FileInputStream in = new FileInputStream(filename);
			byte[] BOM = new byte[3];
			in.read(BOM, 0, 3);
			in.close();

			if(BOM[0]==UTF8[0] && BOM[1]==UTF8[1] && BOM[2]==UTF8[2])
				return "UTF-8";
			if(BOM[0]==UTF16LE[0] && BOM[1]==UTF16LE[1])
				return "UTF-16LE";
			if(BOM[0]==UTF16BE[0] && BOM[1]==UTF16BE[1])
				return "UTF-16BE";

			return "EUC-KR"; // 일단은 ANSI를 EUC-KR로 인식
		}
		
		public static byte[] getBytes(String encoding) {
			switch(encoding) {
				case "UTF-8"    : return UTF8;
				case "UTF-16LE" : return UTF16LE;
				case "UTF-16BE" : return UTF16BE;
			}
			return new byte[0];
		}
	}
//-------------------------------------------------------------------------------//

	public static void main(String[] args) throws Exception {
		String[] testStr = {"123ab", "1", "123d", "This is an encoded string"};

		String encoded;
		byte[] decoded = new byte[0];
		String charset;
		
		charset = "UTF-8";
		System.out.println("==" + charset + "==");
		for(String x : testStr) {
			encoded = encode(x.getBytes(charset));
			System.out.println(encoded);
			decoded = decode(encoded);
			System.out.println(new String(decoded, charset));
			System.out.println("=========");
		}
		System.out.println();
		
		charset = "UTF-16LE";
		System.out.println("==" + charset + "==");
		for(String x : testStr) {
			encoded = encode(x.getBytes(charset));
			System.out.println(encoded);
			decoded = decode(encoded);
			System.out.println(new String(decoded, charset));
			System.out.println("============");
		}
		System.out.println();
		
		charset = "EUC-KR";
		System.out.println("==" + charset + "==");
		for(String x : testStr) {
			encoded = encode(x.getBytes(charset));
			System.out.println(encoded);
			decoded = decode(encoded);
			System.out.println(new String(decoded, charset));
			System.out.println("==========");
		}
		System.out.println();

		//----------------------파일 입출력----------------------//
		String filename = "C:\\BaseHangul\\input";
		System.out.println("From file \"" + filename + "\"");

		charset = BOM.encoding(filename);
		System.out.println("Encoding : " + charset);

		FileInputStream in = new FileInputStream(filename);

		encoded = encode(in, BOM.length(filename));
		System.out.println(encoded);
		decoded = decode(encoded);
		System.out.println(new String(decoded, charset));
		
		FileOutputStream out = new FileOutputStream("C:\\BaseHangul\\output");
		out.write(BOM.getBytes(charset));
		out.write(decoded);
		out.close();
		
	}
}

/*
==UTF-8==
꺽먹꼍녜
123ab
=========
꺽흐흐흐
1
=========
꺽먹꼐빎
123d
=========
넥라똔먈늴멥갯놓궂뗐밸뮤뉴뗐뀄굡덜멂똑뚤
This is an encoded string
=========

==UTF-16LE==
꺽갇궁게각뒨갯됩
123ab
============
꺽가흐흐
1
============
꺽갇궁게각땟가흐
123d
============
네갊됩괵각멜갑가늰감꺄걍각뒨갸됩궁갊냘굇각따갸릴뉩갊냘괠가됩갹릴덛감궁괵각뤄갰릴
This is an encoded string
============

==EUC-KR==
꺽먹꼍녜
123ab
==========
꺽흐흐흐
1
==========
꺽먹꼐빎
123d
==========
넥라똔먈늴멥갯놓궂뗐밸뮤뉴뗐뀄굡덜멂똑뚤
This is an encoded string
==========

From file "C:\BaseHangul\input"
Encoding : EUC-KR
꺽먹꼍녜뉜떨농긴룀렉낸닭봐흐흐흐
123abcde가나다라
*/
